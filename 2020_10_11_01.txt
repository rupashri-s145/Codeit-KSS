Kth smallest element from an array of intervals
Given an array of intervals arr[] of size N, the task is to find the Kth smallest element among all the elements within the intervals of the given array.
Examples:
Input : arr[] = {{5, 11}, {10, 15}, {12, 20}}, K =12
Output: 13
Explanation: Elements in the given array of intervals are: {5, 6, 7, 8, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 17, 18, 19, 20}.
Therefore, the Kth(=12th) smallest element is 13.
Input: arr[] = {{5, 11}, {10, 15}, {12, 20}}, K = 7
Output:10

---------------------------------------------------------------------------------

Code:
from heapq import heapify , heappush,headpop
heap=[ [10, 15], [5, 11], [12, 20] ]
k = 7
heapify(heap)
while( k>1):
	temp = heappop(heap)
	if temp[0] < temp[1]:
		heappush(heap, [temp[0]+1, temp[1]])
	k -= 1
print(heappop(heap)[0])